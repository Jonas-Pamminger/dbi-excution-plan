--------------------------------------------
-- Initialize Administration User and Schema
--------------------------------------------
CREATE ROLE organisation_role;

GRANT CONNECT TO organisation_role;
GRANT RESOURCE TO organisation_role;

CREATE USER organisation
IDENTIFIED BY organisation
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE temp
QUOTA UNLIMITED ON USERS;

GRANT organisation_role TO organisation;

CREATE TABLE organisation.Subject
(
    id   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CONSTRAINT pk_subject PRIMARY KEY (id),

    name VARCHAR2(100) NOT NULL UNIQUE
);

CREATE TABLE organisation.Class
(
    id   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CONSTRAINT pk_class PRIMARY KEY (id),

    name VARCHAR2(100) NOT NULL UNIQUE
);

CREATE TABLE organisation.Person
(
    id        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CONSTRAINT pk_person PRIMARY KEY (id),

    firstname VARCHAR2(100) NOT NULL,
    lastname  VARCHAR2(100) NOT NULL,

    class_id  NUMBER,
    CONSTRAINT fk_person_class FOREIGN KEY (class_id) REFERENCES organisation.Class (id)
);

CREATE TABLE organisation.Competence
(
    id          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CONSTRAINT pk_competence PRIMARY KEY (id),

    description VARCHAR2(100) NOT NULL,

    person_id   NUMBER,
    CONSTRAINT fk_competence_person
        FOREIGN KEY (person_id) REFERENCES organisation.Person (id),

    subject_id  NUMBER,
    CONSTRAINT fk_competence_subject
        FOREIGN KEY (subject_id) REFERENCES organisation.Subject (id)
);

CREATE TABLE organisation.RoomType
(
    id   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CONSTRAINT pk_room_type PRIMARY KEY (id),

    room_type VARCHAR2(100) NOT NULL UNIQUE
);

CREATE TABLE organisation.Room
(
    id          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CONSTRAINT pk_room PRIMARY KEY (id),

    designation VARCHAR2(100) NOT NULL,

    type_id     NUMBER        NOT NULL,
    CONSTRAINT fk_room_room_type FOREIGN KEY (type_id) REFERENCES organisation.RoomType (id)
);

CREATE TABLE organisation.ExamRole (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CONSTRAINT pk_exam_role PRIMARY KEY (id),

    role VARCHAR2(100) NOT NULL UNIQUE
);

CREATE TABLE organisation.Exam (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 100),
    CONSTRAINT pk_exam PRIMARY KEY (id),

    title VARCHAR2(100) NOT NULL,
    exam_date TIMESTAMP NOT NULL,

    subject_id NUMBER NOT NULL,
    CONSTRAINT fk_exam_subject FOREIGN KEY (subject_id) REFERENCES organisation.Subject(id),

    room_id NUMBER,
    CONSTRAINT fk_exam_room FOREIGN KEY (room_id) REFERENCES organisation.Room(id)
);

CREATE TABLE organisation.Participant (
    exam_id NUMBER,
    CONSTRAINT fk_participant_exam FOREIGN KEY (exam_id) REFERENCES organisation.Exam(id),

    person_id    NUMBER,
    CONSTRAINT fk_participant_person FOREIGN KEY (person_id) REFERENCES organisation.Person (id),

    exam_role_id NUMBER,
    CONSTRAINT fk_participant_exam_role FOREIGN KEY (exam_role_id) REFERENCES organisation.ExamRole(id),

    CONSTRAINT pk_participant PRIMARY KEY (exam_id, person_id, exam_role_id),

    score        NUMBER
);

CREATE TABLE organisation.LogTable
(
    log_id            NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    event_type        VARCHAR2(20)  NOT NULL,
    event_description VARCHAR2(255) NOT NULL,
    event_timestamp   TIMESTAMP DEFAULT SYSTIMESTAMP,
    db_user           varchar2(100) not null,
    Constraint pk_logTable PRIMARY KEY (log_id)
);

Create or REPLACE TYPE organisation.TestResultType AS OBJECT
(
    firstname VARCHAR2(100),
    lastname  VARCHAR2(100),
    score     NUMBER
);
CREATE OR REPLACE TYPE organisation.PersonRoleType AS OBJECT
(
    firstname VARCHAR2(100),
    lastname  VARCHAR2(100),
    RoleName   VARCHAR2(50)
);
CREATE OR REPLACE TYPE organisation.PersonWithID AS OBJECT
(
    firstname VARCHAR2(100),
    lastname  VARCHAR2(100),
    id        NUMBER
);

--------------------------------------------
-- Initialize Teacher User
--------------------------------------------
CREATE ROLE teacher_role;

CREATE USER teacher
IDENTIFIED BY teacher
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE temp
QUOTA UNLIMITED ON USERS;

GRANT CREATE SESSION TO teacher_role;
GRANT SELECT ON organisation.Exam TO teacher_role;
GRANT SELECT ON organisation.Room TO teacher_role;
GRANT SELECT ON organisation.RoomType TO teacher_role;
GRANT SELECT ON organisation.Participant TO teacher_role;
GRANT SELECT ON organisation.Subject TO teacher_role;
GRANT SELECT ON organisation.Person TO teacher_role;
GRANT SELECT ON organisation.Class TO teacher_role;

GRANT INSERT ON organisation.Exam TO teacher_role;
GRANT INSERT ON organisation.Participant TO teacher_role;

GRANT teacher_role TO teacher;

--------------------------------------------
-- Initialize Student User
--------------------------------------------
CREATE ROLE student_role;

CREATE USER student
IDENTIFIED BY student
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE temp
QUOTA UNLIMITED ON USERS;

GRANT CREATE SESSION TO student_role; -- Basic privilege for all users

-- Grant SELECT privilege on specific tables (organisation.Subject, organisation.Class, organisation.Exam, organisation.Participant)
GRANT SELECT ON organisation.Class TO student_role;
GRANT SELECT ON organisation.Participant TO student_role;
GRANT SELECT ON organisation.Subject TO student_role;
GRANT SELECT ON organisation.Room TO student_role;
GRANT SELECT ON organisation.RoomType TO student_role;

GRANT student_role TO student;

-- Commit the changes
COMMIT;